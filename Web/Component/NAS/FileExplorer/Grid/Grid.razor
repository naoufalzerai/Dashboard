@namespace Web.Component.NAS.FileExplorer
@using Entities.Entity
@using Entities.Model.NAS
@using Web.State
@using BL.SMB;
@implements IDisposable
@inject FileManagerState FileManagerState

<div>
    @FileManagerState.Property.Address
    <input class="path-input form-control" list="path" placeholder="Path">
    <datalist id="path">
        <option>/</option>
        <option>/usr</option>
        <option>/home</option>
        <option>/bin</option>
    </datalist>
    <div class="grid">
        <div>
            <input type="checkbox" name="" id="" @onchange="SelectAll">            
        </div>
        <div>File</div>
        <div>Created</div>
        <div>Updated</div>
        <div>Size</div>
        @foreach (FileModel f in files)
        {
                <div>
                    <input type="checkbox" @bind="f.IsSelected">               
                </div>
                <div> <i class="@f.Type.Icon()"></i>@f.Name</div>
                <div>@f.CreateDate.ToShortDateString()</div>
                <div>@f.UpdateDate.ToShortDateString()</div>
                <div>@f.Size</div>
            
        }
    </div>
</div>

@code {

    bool IsSelectAll = false; 
    
    List<FileModel> files = new List<FileModel>(){
                                                        new FileModel(){
                                                        Name="Song.mp3",
                                                        Path="/Music",
                                                        IsSelected=true
                                                        },
                                                        new FileModel(){
                                                        Name="test",
                                                        Path="/Other"
                                                        }
                                                        ,
                                                        new FileModel(){
                                                        Name="impot.txt",
                                                        Path="/Files"
                                                        }
                                                    };
     
    void SelectAll()
    {
        IsSelectAll = !IsSelectAll;
        files.ForEach(f=>f.IsSelected=IsSelectAll);
    }    

    protected override async void OnInitialized()
    {
        FileManagerState.OnChange += UpdateSource;
    }

    public void Dispose()
    {
        FileManagerState.OnChange -= UpdateSource;
    }

    private async void UpdateSource()
    {
        StateHasChanged();
    }

}